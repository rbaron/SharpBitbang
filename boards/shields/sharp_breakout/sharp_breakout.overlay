#include <dt-bindings/regulator/npm1300.h>

/delete-node/ &pwm20;

/delete-node/ &uart30;

/delete-node/ &spi00;

/delete-node/ &pwm_led1;

// /delete-node/ &uart20;

// bit-bang i2c.


// &i2c30 {
// 	status = "okay";
// 	pinctrl-0 = <&i2c30_default>;
// 	pinctrl-1 = <&i2c30_sleep>;
// 	pinctrl-names = "default", "sleep";

// 	sht4x@44 {
// 		compatible = "sensirion,sht4x";
// 		reg = <0x44>;
// 		label = "SHT40";
// 		status = "okay";
// 		repeatability= <2>;
// 	};

// 	// lsm6dsl: lsm6dsl@6a {
// 	// 	compatible = "i2c-device";
// 	// 	reg = <0x6a>;
// 	// 	status = "okay";
// 	// 	label = "LSM6DSL";
// 	// };

// 	npm1300: npm1300@6b {
// 		compatible = "nordic,npm1300";
// 		status = "okay";
// 		reg = <0x6b>;

// 		npm1300_regulators: regulators {
// 			compatible = "nordic,npm1300-regulator";

// 			BUCK1 {
// 				status = "disabled";
// 			};

// 			BUCK2 {
// 				status = "disabled";
// 			};

// 			LDO1 {
// 				status = "disabled";
// 			};

// 			LDO2 {
// 				regulator-min-microvolt = <1000000>;
// 				// regulator-min-microvolt = <3300000>;
// 				regulator-max-microvolt = <3300000>;
// 				regulator-boot-on;
// 				regulator-always-on;
// 				status = "okay";
// 			};
// 		};
// 	};
// };

&pinctrl {
	/delete-node/ spi00_default;
	/delete-node/ spi00_sleep;
	/delete-node/ uart30_default;
	/delete-node/ uart30_sleep;
	/delete-node/ pwm20_default;
	/delete-node/ pwm20_sleep;
	/delete-node/ uart20_default;
	/delete-node/ uart20_sleep;

	/omit-if-no-ref/ uart20_default: uart20_default {
		group1 {
			// psels = <NRF_PSEL(UART_TX, 2, 10)>;
			// psels = <NRF_PSEL(UART_TX, 2, 6)>;
			psels = <NRF_PSEL(UART_TX, 2, 4)>;
		};
		group2 {
			// psels = <NRF_PSEL(UART_RX, 2, 7)>;
			psels = <NRF_PSEL(UART_RX, 2, 5)>;
			bias-pull-up;
		};
	};

	/omit-if-no-ref/ uart20_sleep: uart20_sleep {
		group1 {
			// psels = <NRF_PSEL(UART_TX, 2, 10)>,
			// 				<NRF_PSEL(UART_RX, 2, 9)>;
			// psels = <NRF_PSEL(UART_TX, 2, 6)>,
			// 				<NRF_PSEL(UART_RX, 2, 7)>;

			// TODO: these are accel ints.
			psels = <NRF_PSEL(UART_TX, 2, 4)>,
							<NRF_PSEL(UART_RX, 2, 5)>;
			low-power-enable;
		};
	};

	// /omit-if-no-ref/ i2c30_default: i2c30_default {
	// 	group1  {
	// 		psels = <NRF_PSEL(TWIM_SCL, 0, 1)>,
	// 				<NRF_PSEL(TWIM_SDA, 0, 0)>;
	// 		// psels = <NRF_PSEL(TWIM_SCL, 2, 6)>,
	// 		// 		<NRF_PSEL(TWIM_SDA, 2, 7)>;
	// 		bias-pull-up;
	// 	};
	// };

	// /omit-if-no-ref/ i2c30_sleep: i2c30_sleep {
	// 	group1  {
	// 		psels = <NRF_PSEL(TWIM_SCL, 0, 1)>,
	// 				<NRF_PSEL(TWIM_SDA, 0, 0)>;
	// 		// psels = <NRF_PSEL(TWIM_SCL, 2, 6)>,
	// 		// 		<NRF_PSEL(TWIM_SDA, 2, 7)>;
	// 		low-power-enable;
	// 		bias-pull-up;
	// 	};
	// };


};

&uart20 {
	current-speed = <115200>;
	pinctrl-0 = <&uart20_default>;
	pinctrl-1 = <&uart20_sleep>;
	pinctrl-names = "default", "sleep";
};

&nfct {
	status = "disabled";
};

// &uicr {
// 	nfct-pins-as-gpios;
// };



/ {

	chosen {
		zephyr,display = &sharp_display;
	};

	sharp_display: sharp_ls0xxb7 {
		compatible = "sharp,ls0xxb7-bitbang";
		status = "okay";
		height = <280>;
		width = <280>;
		rgb-gpios =
								<&gpio1 3 GPIO_ACTIVE_HIGH>,
								<&gpio1 4 GPIO_ACTIVE_HIGH>,  // r1 [1]
								<&gpio1 5 GPIO_ACTIVE_HIGH>,  // g0 [2]
								<&gpio1 6 GPIO_ACTIVE_HIGH>,  // g1 [3]
								<&gpio1 7 GPIO_ACTIVE_HIGH>,  // b0 [4]
								<&gpio1 8 GPIO_ACTIVE_HIGH>;  // b1 [5]
								intb-gpios = <&gpio1 12 GPIO_ACTIVE_HIGH>;
		gsp-gpios = <&gpio1 9 GPIO_ACTIVE_HIGH>;
		gck-gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
		gen-gpios = <&gpio1 11 GPIO_ACTIVE_HIGH>;
		bsp-gpios = <&gpio0 4 GPIO_ACTIVE_HIGH>;
		bck-gpios = <&gpio1 2 GPIO_ACTIVE_HIGH>;
		vb-gpios = <&gpio2 8 GPIO_ACTIVE_HIGH>;
		va-gpios = <&gpio2 9 GPIO_ACTIVE_HIGH>;
		vcom-freq = <30>;
	};
	/delete-node/ aliases;


	leds {
		compatible = "gpio-leds";
		// vddio_en: vddio_en {
		// 	gpios = <&gpio1 5 GPIO_ACTIVE_HIGH>;
		// 	label = "VDDIO_EN";
		// };

		// vbus_en: vbus_en {
		// 	gpios = <&gpio1 4 GPIO_ACTIVE_HIGH>;
		// 	label = "VBUS_EN";
		// };

		led1: led_1 {
			gpios = <&gpio2 10 GPIO_ACTIVE_HIGH>;
			label = "LED 1";
		};

		led2: led_2 {
			gpios = <&gpio2 4 GPIO_ACTIVE_HIGH>;
			label = "LED 2";
		};

		dispv5en: dispv5_en {
			gpios = <&gpio2 2 GPIO_ACTIVE_HIGH>;
			label = "DISP_V5_EN";
		};
	};

	buttons {
		compatible = "gpio-keys";
		// Defaults to 30ms.
		debounce-interval-ms = <60>;
		button0: button_0 {
			gpios = <&gpio0 0 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Push button 0";
			zephyr,code = <INPUT_KEY_0>;
		};
		button1: button_1 {
			gpios = <&gpio0 1 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Push button 1";
			zephyr,code = <INPUT_KEY_1>;
		};
		button2: button_2 {
			gpios = <&gpio0 2 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Push button 2";
			zephyr,code = <INPUT_KEY_2>;
		};
		button3: button_3 {
			gpios = <&gpio0 3 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Push button 3";
			zephyr,code = <INPUT_KEY_3>;
		};
	};

	gpio_i2c0: gpio_i2c {
		compatible = "gpio-i2c";
		status = "okay";
		clock-frequency = <I2C_BITRATE_STANDARD>;
		// clock-frequency = < 10000 >;
		// sda-gpios = <&gpio2 7 (GPIO_OPEN_DRAIN | GPIO_PULL_UP)>;
		// scl-gpios = <&gpio2 6 (GPIO_OPEN_DRAIN | GPIO_PULL_UP)>;
		sda-gpios = <&gpio2 7 GPIO_PULL_UP>;
		scl-gpios = <&gpio2 6 GPIO_PULL_UP>;
		#address-cells = <1>;
		#size-cells = <0>;

		sht4x@44 {
			compatible = "sensirion,sht4x";
			reg = <0x44>;
			label = "SHT40";
			status = "okay";
			repeatability= <2>;
		};

		npm1300: npm1300@6b {
			compatible = "nordic,npm1300";
			status = "okay";
			reg = <0x6b>;

			// leds.
			npm1300_leds: leds {
				compatible = "nordic,npm1300-led";
				nordic,led0-mode = "host";
				nordic,led1-mode = "charging";
				nordic,led2-mode = "error";
			};

			npm1300_regulators: regulators {
				compatible = "nordic,npm1300-regulator";

				BUCK1 {
					status = "disabled";
				};

				BUCK2 {
					status = "disabled";
				};

				LDO1 {
					status = "disabled";
				};

				LDO2 {
					// regulator-min-microvolt = <1000000>;
					regulator-min-microvolt = <1000000>;
					// regulator-min-microvolt = <3300000>;
					regulator-max-microvolt = <3500000>;
					// regulator-min-microvolt = <1000000>;
					regulator-boot-on;
					regulator-always-on;
					status = "okay";

					// status = "disabled";
				};

			};
		};
	};

};

// &uicr {
// 	nfct-pins-as-gpios;
// };
